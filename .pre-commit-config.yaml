---
# Pre-commit hooks for stellar-monitor-tenant-isolation
# Install with: pip install pre-commit && pre-commit install --install-hooks
minimum_pre_commit_version: 3.5.0
default_install_hook_types: [commit-msg, pre-commit, pre-push]
default_stages: [pre-commit]

repos:
  # Rust-specific hooks
  - repo: local
    hooks:
      - id: rustfmt
        name: rustfmt
        entry: cargo fmt --all --
        pass_filenames: false
        language: system
        types: [rust]
        
      - id: clippy
        name: clippy
        entry: cargo clippy --all-targets --all-features -- -D warnings
        pass_filenames: false
        language: system
        types: [rust]
        
      - id: cargo-test
        name: cargo test
        entry: cargo test --lib
        pass_filenames: false
        language: system
        types: [rust]
        
      - id: test-coverage
        name: test coverage check
        entry: bash
        args: [-c, 'MIN_COVERAGE=95; if command -v cargo-llvm-cov &> /dev/null; then coverage=$(cargo llvm-cov --all-features --summary-only 2>/dev/null | grep TOTAL | awk "{print \$10}" | sed "s/%//"); if [ "${coverage%%.*}" -lt $MIN_COVERAGE ]; then echo "‚ùå Test coverage is ${coverage}%, minimum required is ${MIN_COVERAGE}%"; echo "üìñ See docs/TESTING_GUIDE.md for comprehensive testing standards"; exit 1; else echo "‚úÖ Test coverage is ${coverage}% (minimum: ${MIN_COVERAGE}%)"; fi; else echo "‚ö†Ô∏è  cargo-llvm-cov not installed, skipping coverage check"; fi']
        pass_filenames: false
        language: system
        types: [rust]
        stages: [pre-push]
        
      - id: sqlx-prepare-check
        name: SQLx prepare check
        entry: bash
        args: [-c, 'if git diff --cached --name-only | grep -E "\.rs$" | xargs grep -l "sqlx::" 2>/dev/null; then echo "‚ö†Ô∏è  SQLx queries detected. If you modified queries, run: cargo sqlx prepare"; fi']
        pass_filenames: false
        language: system
        types: [rust]

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-json
      - id: check-toml
      - id: check-yaml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: detect-private-key
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Typo checking
  - repo: https://github.com/crate-ci/typos
    rev: v1.29.4
    hooks:
      - id: typos

  # Conventional commits
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.4.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [--strict, build, chore, ci, docs, feat, fix, perf, refactor, revert, style, test]

  # Pre-push hooks
  - repo: local
    hooks:
      - id: cargo-test-all
        name: cargo test (all)
        entry: cargo test
        pass_filenames: false
        language: system
        stages: [pre-push]
        
      - id: cargo-build-release
        name: cargo build --release
        entry: cargo build --release
        pass_filenames: false
        language: system
        stages: [pre-push]