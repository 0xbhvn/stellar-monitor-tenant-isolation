version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: stellar_monitor_tenant
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SMT__DATABASE__URL: postgres://postgres:password@postgres/stellar_monitor_tenant
      SMT__AUTH__JWT_SECRET: ${JWT_SECRET:-change-me-in-production}
      SMT__SERVER__HOST: 0.0.0.0
      SMT__SERVER__PORT: 3000
      SMT__MONITORING__METRICS_PORT: 9090
      RUST_LOG: ${RUST_LOG:-info}
    ports:
      - "3000:3000"
      - "9090:9090"
    volumes:
      - ./config:/app/config:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Optional: Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    depends_on:
      - app
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    depends_on:
      - app
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus

volumes:
  postgres_data:
  grafana_data:
  prometheus_data: